)
)
(
graph_contracts_area <- comparison_contracts_area %>%
filter(!is.na(SimpleArea) & SimpleArea != "Services") %>%
# mutate(SimpleArea = factor(SimpleArea, levels = c("Products",
#                                               # "Services",
#                                               "R&D"))) %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = baseline_percent_change),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_grid(type ~ SimpleArea) +
chart_theme +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)
)
(
graph_contracts_area <- comparison_contracts_area %>%
filter(!is.na(SimpleArea) & !SimpleArea %in% c("Services","Unlabeled")) %>%
# mutate(SimpleArea = factor(SimpleArea, levels = c("Products",
#                                               # "Services",
#                                               "R&D"))) %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = baseline_percent_change),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_grid(type ~ SimpleArea) +
chart_theme +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)
)
ggsave(
"contracts/charts/percent_change_category.svg",
graph_contracts_area,
width = 9,
height = 6,
units = "in",
device = "svg"
)
(
graph_contracts_area <- comparison_contracts_area %>%
filter(!is.na(SimpleArea) & !SimpleArea %in% c("Services","Unlabeled")) %>%
# mutate(SimpleArea = factor(SimpleArea, levels = c("Products",
#                                               # "Services",
#                                               "R&D"))) %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = baseline_percent_change),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_grid(type ~ SimpleArea) +
chart_theme +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)+
labs(caption="Obligations for the services and with an unlabeled area are excluded from the graph.")
)
(
graph_contracts_area <- comparison_contracts_area %>%
filter(!is.na(SimpleArea) & !SimpleArea %in% c("Services","Unlabeled")) %>%
# mutate(SimpleArea = factor(SimpleArea, levels = c("Products",
#                                               # "Services",
#                                               "R&D"))) %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = baseline_percent_change),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_grid(type ~ SimpleArea) +
chart_theme +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)+
labs(caption="Unlabeled and services obligations are not shown.")
)
ggsave(
"contracts/charts/percent_change_category.svg",
graph_contracts_area,
width = 9,
height = 6,
units = "in",
device = "svg"
)
(
comparison_contracts_overall <- comparison_contracts %>%
group_by(Fiscal.Year, type) %>%
dplyr::summarise(amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE),
amount.OMB.2019.lagged = sum(amount.OMB.2019.lagged, na.rm = TRUE),
amount_change = sum(amount_change, na.rm = TRUE),
amount.OMB.2019.2000 = sum(amount.OMB.2019.2000, na.rm = TRUE),
baseline_change = sum(baseline_change, na.rm = TRUE)) %>%
mutate(amount_percent_change = (amount_change) / amount.OMB.2019.lagged,
baseline_percent_change = (baseline_change) / amount.OMB.2019.2000) #%>%
# dplyr::rename(amount.OMB.2019 = amount.OMB.2019) %>%
# select(Fiscal.Year, amount.OMB.2019, amount_change, amount_percent_change, type) #%>%
# This has already been done, which is good, as I don't htink it makes sense to sum percent changes like that.
# group_by(Fiscal.Year, type) %>%
# dplyr::summarise(
#   amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE),
#   amount_change = sum(amount_change, na.rm = TRUE),
#   amount_percent_change = sum(amount_percent_change, na.rm = TRUE)
# )
)
#
#
# base_year <- engine_contracts %>%
#   as.tibble(.) %>%
#   group_by(Fiscal.Year, type, SubCustomer) %>%
#   dplyr::summarise(amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE))
#
# dyear <- base_year %>%
#   filter(Fiscal.Year == 2000) %>%
#   select(amount.OMB.2019, type, SubCustomer)
#
# base_year.eng <- base_year %>%
#   left_join(dyear, by = c("type", "SubCustomer")) %>%
#   filter(SubCustomer != "Other DoD") %>%
#   select(-Fiscal.Year.y) %>%
#   mutate(amount_change = amount.OMB.2019 - amount.OMB.2019.lagged) %>%
#   mutate(amount_percent_change = (amount_change) / amount.OMB.2019.lagged * 100) %>%
#   mutate(base = 0) %>%
#   mutate(amount.OMB.2019 = base + amount_percent_change) %>%
#   dplyr::rename(Fiscal.Year = Fiscal.Year.x) %>%
#   group_by(Fiscal.Year, SubCustomer) %>%
#   dplyr::summarise(amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE)) %>%
#   mutate(data_type = "engine") %>%
#   mutate(amount.OMB.2019 = amount.OMB.2019 / 100)
#
# base_year <- topline_contracts %>%
#   group_by(Fiscal.Year, type, SubCustomer) %>%
#   dplyr::summarise(amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE))
#
# dyear <- base_year %>%
#   filter(Fiscal.Year == 2000) %>%
#   select(amount.OMB.2019, type, SubCustomer)
#
# base_year.top <- base_year %>%
#   left_join(dyear, by = c("type", "SubCustomer")) %>%
#   filter(SubCustomer != "Other DoD") %>%
#   select(-Fiscal.Year.y) %>%
#   mutate(amount_change = amount.OMB.2019 - amount.OMB.2019.lagged) %>%
#   mutate(amount_percent_change = (amount_change) / amount.OMB.2019.lagged * 100) %>%
#   mutate(base = 0) %>%
#   mutate(amount.OMB.2019 = base + amount_percent_change) %>%
#   dplyr::rename(Fiscal.Year = Fiscal.Year.x) %>%
#   group_by(Fiscal.Year, SubCustomer) %>%
#   dplyr::summarise(amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE)) %>%
#   mutate(data_type = "topline") %>%
#   mutate(amount.OMB.2019 = amount.OMB.2019 / 100)
#
# eng.topline <- rbind(base_year.eng, base_year.top)
(
comparison_contracts_subcustomer <- comparison_contracts %>%
group_by(Fiscal.Year, SubCustomer, type) %>%
dplyr::summarise(amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE),
amount.OMB.2019.lagged = sum(amount.OMB.2019.lagged, na.rm = TRUE),
amount_change = sum(amount_change, na.rm = TRUE),
amount.OMB.2019.2000 = sum(amount.OMB.2019.2000, na.rm = TRUE),
baseline_change = sum(baseline_change, na.rm = TRUE)) %>%
mutate(amount_percent_change = (amount_change) / amount.OMB.2019.lagged,
baseline_percent_change = (baseline_change) / amount.OMB.2019.2000) #%>%
)
levels(factor(comparison_contracts_subcustomer$type))
max((comparison_contracts_subcustomer %>%
filter(SubCustomer=="Other DoD" &
type =="Engines"))$amount.OMB.2019
)
(
graph_contracts_subcustomer <- comparison_contracts_subcustomer %>%
filter(!is.na(SubCustomer) & SubCustomer %in% c("Total",
"Army",
"Navy",
"Air Force",
"DLA")) %>%
group_by() %>%
mutate(SubCustomer = factor(
SubCustomer, levels = c("Total",
"Army",
"Navy",
"Air Force",
"DLA"
)
)) %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = baseline_percent_change),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_grid(type ~ SubCustomer) +
chart_theme +
#scale_x_continuous(breaks = seq(2000, 2020, by = 2),
#labels = function(x) {substring(as.character(x), 3, 4)})+
#scale_y_continuous(limits = c(0:750)) +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)+
labs(caption="Obligations for the remainder of DoD and with an unlabeled customer are excluded from the graph.")
)
ggsave(
"contracts/charts/percent_change_customer.svg",
graph_contracts_subcustomer,
width = 9,
height = 6,
units = "in",
device = "svg"
)
(
comparison_contracts_area <- comparison_contracts %>%
group_by(Fiscal.Year, SimpleArea, type) %>%
dplyr::summarise(amount.OMB.2019 = sum(amount.OMB.2019, na.rm = TRUE),
amount.OMB.2019.lagged = sum(amount.OMB.2019.lagged, na.rm = TRUE),
amount_change = sum(amount_change, na.rm = TRUE),
amount.OMB.2019.2000 = sum(amount.OMB.2019.2000, na.rm = TRUE),
baseline_change = sum(baseline_change, na.rm = TRUE)) %>%
mutate(amount_percent_change = (amount_change) / amount.OMB.2019.lagged,
baseline_percent_change = (baseline_change) / amount.OMB.2019.2000) #%>%
)
(
graph_contracts_area <- comparison_contracts_area %>%
filter(!is.na(SimpleArea) & !SimpleArea %in% c("Services","Unlabeled")) %>%
# mutate(SimpleArea = factor(SimpleArea, levels = c("Products",
#                                               # "Services",
#                                               "R&D"))) %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = baseline_percent_change),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_grid(type ~ SimpleArea) +
chart_theme +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)+
labs(caption="Unlabeled and services obligations are not shown.")
)
ggsave(
"contracts/charts/percent_change_category.svg",
graph_contracts_area,
width = 9,
height = 6,
units = "in",
device = "svg"
)
(
graph_contracts_overall <- comparison_contracts_overall %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = amount.OMB.2019),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_wrap(~ type) +
chart_theme +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)
)
(
graph_contracts_overall <- comparison_contracts_overall %>%
mutate(type = factor(type, levels = c("Topline", "Engines"))) %>%
ggplot() +
geom_line(
aes(x = Fiscal.Year, y = baseline_percent_change),
alpha = .9,
color = "#554449",
size = 1
) +
geom_hline(
yintercept = 0,
alpha = .5,
color = "#554449",
size = .5,
linetype = "dotted"
) +
facet_wrap(~ type) +
chart_theme +
ggtitle("Change in Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Cumulative Percent Change, Inflation Adjusted (2000=100%)") +
scale_y_continuous(labels = percent) +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
)
)
ggsave(
"charts/percent_change_total.svg",
eng.topline1,
width = 9,
height = 6,
units = "in",
device = "svg"
)
ggsave(
"charts/percent_change_total.svg",
eng.topline1,
width = 9,
height = 6,
units = "in",
device = "svg"
)
ggsave(
"charts/percent_change_total.svg",
graph_contracts_overall,
width = 9,
height = 6,
units = "in",
device = "svg"
)
ggsave(
"contracts/charts/percent_change_total.svg",
graph_contracts_overall,
width = 9,
height = 6,
units = "in",
device = "svg"
)
(
total <- engine_contracts %>%
group_by(Fiscal.Year) %>%
dplyr::summarise(amount.OMB.Then.Year = sum(amount.OMB.Then.Year, na.rm = TRUE)) %>%
ggplot() +
geom_area(aes(y = amount.OMB.Then.Year, x = Fiscal.Year), alpha = .9 , stat = "identity") +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
) +
scale_y_continuous(labels = money_labels) +
chart_theme +
ggtitle("DoD Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Current $")
)
(
total <- engine_contracts %>%
group_by(Fiscal.Year) %>%
dplyr::summarise(amount.Then.Year = sum(amount.Then.Year, na.rm = TRUE)) %>%
ggplot() +
geom_area(aes(y = amount.Then.Year, x = Fiscal.Year), alpha = .9 , stat = "identity") +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
) +
scale_y_continuous(labels = money_labels) +
chart_theme +
ggtitle("DoD Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Current $")
)
ggsave(
"contracts/charts/amount_total_current.svg",
total_current,
device = "svg",
width = 8,
height = 6,
units = "in"
)
(
total_current <- engine_contracts %>%
group_by(Fiscal.Year) %>%
dplyr::summarise(amount.Then.Year = sum(amount.Then.Year, na.rm = TRUE)) %>%
ggplot() +
geom_area(aes(y = amount.Then.Year, x = Fiscal.Year), alpha = .9 , stat = "identity") +
scale_x_continuous(
breaks = seq(2000, 2020, by = 2),
labels = function(x) {
substring(as.character(x), 3, 4)
}
) +
scale_y_continuous(labels = money_labels) +
chart_theme +
ggtitle("DoD Aircraft Engine Contract Obligations") +
xlab("Fiscal Year") +
ylab("Current $")
)
ggsave(
"contracts/charts/amount_total_current.svg",
total_current,
device = "svg",
width = 8,
height = 6,
units = "in"
)
