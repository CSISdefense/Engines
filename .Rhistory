# ================================================================================
# The Future of Military Engines
# By Gabriel Coll
# --------------------------------------------------------------------------------
# inventory numbers and performance specs for aircraft and their engines
# ================================================================================
# cleaning and transformation ====================================================
# load packages ------------------------------------------------------------------
library(tidyverse)
library(ggthemes)
install.packages("ggthemes")
# ================================================================================
# The Future of Military Engines
# By Gabriel Coll
# --------------------------------------------------------------------------------
# inventory numbers and performance specs for aircraft and their engines
# ================================================================================
# cleaning and transformation ====================================================
# load packages ------------------------------------------------------------------
library(tidyverse)
library(ggthemes)
library(extrafont)
install.packages("extrafont")
# ================================================================================
# The Future of Military Engines
# By Gabriel Coll
# --------------------------------------------------------------------------------
# inventory numbers and performance specs for aircraft and their engines
# ================================================================================
# cleaning and transformation ====================================================
# load packages ------------------------------------------------------------------
library(tidyverse)
library(ggthemes)
library(extrafont)
library(extrafontdb)
# theme --------------------------------------------------------------------------
source("chart_theme.R")
# read data ----------------------------------------------------------------------
intro_year <- read_csv("intro_year.csv")
usaf_inventory <- read_csv("usaf_inventory.csv")
engine_specs <- read_csv("engine_specs.csv")
generation <- read_csv("generation.csv")
relevance <- read_csv("relevance.csv")
intro_year <- intro_year %>%
.[-1,] %>%
gather(aircraft, intro_year,-year) %>%
.[,-1]
View(intro_year)
View(usaf_inventory)
intro_year <- read_csv("data/intro_year.csv")
usaf_inventory <- read_csv("data/usaf_inventory.csv")
engine_specs <- read_csv("data/engine_specs.csv")
generation <- read_csv("data/generation.csv")
relevance <- read_csv("data/relevance.csv")
library(tidyverse)
library(ggthemes)
library(extrafont)
library(extrafontdb)
source("inventory/theme/chart_theme.R")
intro_year <- read_csv("inventory/data/intro_year.csv")
engine_specs <- read_csv("inventory/data/engine_specs.csv")
generation <- read_csv("inventory/data/generation.csv")
relevance <- read_csv("inventory/data/relevance.csv")
intro_year <- intro_year %>%
.[-1,] %>%
gather(aircraft, intro_year,-year) %>%
.[,-1]
usaf_inventory[is.na(usaf_inventory)] <- 0
# Preserve unique column names and then remove "_1" from duplicates in aircraft.
usaf_inventory <- gather(usaf_inventory, aircraft, amount,-year)
usaf_inventory$column<-usaf_inventory$aircraft
usaf_inventory$aircraft<-sub("_1$","",usaf_inventory$aircraft)
sum(usaf_inventory$amount,na.rm = TRUE)
usaf_inventory$amount<-as.numeric(usaf_inventory$amount)
sum(usaf_inventory$amount,na.rm = TRUE)
usaf_inventory <- usaf_inventory %>% group_by(year, aircraft) %>%
dplyr:summarize(amount=sum(amount,na.rm = TRUE))
usaf_inventory <- usaf_inventory %>% group_by(year, aircraft) %>%
tidyr::summarize(amount=sum(amount,na.rm = TRUE))
tidyr::summarise(amount=sum(amount,na.rm = TRUE))
usaf_inventory <- usaf_inventory %>% group_by(year, aircraft) %>%
summarise(amount=sum(amount,na.rm = TRUE))
sum(usaf_inventory$amount,na.rm = TRUE)
usaf_inventory <- read_csv("inventory/data/usaf_inventory.csv")
intro_year <- intro_year %>%
.[-1,] %>%
gather(aircraft, intro_year,-year) %>%
.[,-1]
usaf_inventory[is.na(usaf_inventory)] <- 0
# Preserve unique column names and then remove "_1" from duplicates in aircraft.
usaf_inventory <- gather(usaf_inventory, aircraft, amount,-year)
usaf_inventory$column<-usaf_inventory$aircraft
usaf_inventory$aircraft<-sub("_1$","",usaf_inventory$aircraft)
#Stop preserving and summarize by aircraft type
usaf_inventory$amount<-as.numeric(usaf_inventory$amount)
usaf_inventory <- usaf_inventory %>% group_by(year, aircraft) %>%
summarise(amount=sum(amount,na.rm = TRUE))
# read data ----------------------------------------------------------------------
intro_year <- read_csv("inventory/data/intro_year.csv")
usaf_inventory <- read_csv("inventory/data/usaf_inventory.csv")
engine_specs <- read_csv("inventory/data/engine_specs.csv")
generation <- read_csv("inventory/data/generation.csv")
relevance <- read_csv("inventory/data/relevance.csv")
intro_year <- intro_year %>%
.[-1,] %>%
gather(aircraft, intro_year,-year) %>%
.[,-1]
usaf_inventory[is.na(usaf_inventory)] <- 0
# Preserve unique column names and then remove "_1" from duplicates in aircraft.
usaf_inventory <- gather(usaf_inventory, aircraft, amount,-year)
usaf_inventory$column<-usaf_inventory$aircraft
usaf_inventory$aircraft<-sub("_1$","",usaf_inventory$aircraft)
#Stop preserving and summarize by aircraft type
usaf_inventory$amount<-as.numeric(usaf_inventory$amount)
usaf_inventory <- usaf_inventory %>% group_by(year, aircraft) %>%
summarise(amount=sum(amount,na.rm = TRUE))
usaf_inventory$aircraft<-factor(usaf_inventory$aircraft)
engine_specs$aircraft<-factor(engine_specs$aircraft)
if(any(duplicated(engine_specs$aircraft)))
stop (paste("Duplicate aircraft in engine_spaces:",
duplicated(unique(duplicated(engine_specs$aircraft)))))
if(any(duplicated(engine_specs$aircraft)))
stop (paste("Duplicate aircraft in engine_spaces:",
unique(egine_specs$aircraft[duplicated(engine_specs$aircraft)])))
if(any(duplicated(engine_specs$aircraft)))
stop (paste("Duplicate aircraft in engine_spaces:",
unique(engine_specs$aircraft[duplicated(engine_specs$aircraft)])))
colname(engine_specs)
colnames(engine_specs)
engine_specs_stripped <- engine_specs %>% group_by(aircraft, type, engine_type,  engine_number, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(typecount=nrow(unique(type)))
engine_specs_stripped <- engine_specs %>% group_by(aircraft, type, engine_type,  engine_number, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(typecount=length(unique(type)))
if(any(duplicated(engine_specs_stripped$aircraft)))
stop (paste("Duplicate aircraft in engine_spaces:",
unique(engine_specs$aircraft[duplicated(engine_specs$aircraft)])))
if(any(duplicated(engine_specs_stripped$aircraft)))
stop (paste("Duplicate aircraft in engine_spaces:",
unique(engine_specs_stripped$aircraft[duplicated(engine_specs$aircraft)])))
engine_specs_stripped <- engine_specs %>% group_by(aircraft, engine_type,  engine_number, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(typecount=length(unique(type)))
if(any(duplicated(engine_specs_stripped$aircraft)))
stop (paste("Duplicate aircraft in engine_spaces:",
unique(engine_specs_stripped$aircraft[duplicated(engine_specs$aircraft)])))
if(any(duplicated(engine_specs_stripped$aircraft))){
unique(engine_specs_stripped$aircraft[duplicated(engine_specs$aircraft)])
stop ("Duplicate aircraft in engine_spaces:")
}
if(any(duplicated(engine_specs_stripped$aircraft))){
print(unique(engine_specs_stripped$aircraft[duplicated(engine_specs$aircraft)]))
stop ("Duplicate aircraft in engine_spaces:")
}
View(engine_specs_stripped)
engine_specs_stripped<-engine_specs_stripped[order(engine_specs_stripped$aircraft)]
engine_specs_stripped<-engine_specs_stripped[order(engine_specs_stripped$aircraft),]
View(engine_specs_stripped)
if(any(duplicated(engine_specs_stripped$aircraft))){
print(unique(engine_specs_stripped$aircraft[duplicated(engine_specs$aircraft)]))
stop ("Duplicate aircraft in engine_spaces:")
}
?ordered
?sort
engine_specs_stripped<-engine_specs_stripped[order(engine_specs_stripped$aircraft),]
print(unique(engine_specs_stripped$aircraft[duplicated(engine_specs_stripped$aircraft)]))
View(engine_specs_stripped)
engine_specs_stripped[duplicated(engine_specs_stripped$aircraft),]
duplicate_aircraft<-unique(engine_specs_stripped$aircraft[duplicated(engine_specs_stripped$aircraft)])
duplicate_aircraft
engine_specs_stripped[engine_specs_stripped$aircraft %in% duplicate_aircraft]
duplicate_aircraft
engine_specs_stripped[engine_specs_stripped$aircraft %in% c(duplicate_aircraft)]
engine_specs_stripped[engine_specs_stripped$aircraft %in% c(duplicate_aircraft),]
engine_specs_stripped[engine_specs_stripped$aircraft %in% duplicate_aircraft,]
write.csv(engine_specs_stripped,"inventory/data/duplicate_engines.csv")
write.csv(engine_specs_stripped[engine_specs_stripped$aircraft %in% duplicate_aircraft,],
"inventory/data/duplicate_engines.csv")
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=iif(max(engine_type)==max(engine_type),max(engine_type),NA),
engine_number=iif(max(engine_number)==max(engine_number),max(engine_number),NA),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(max(engine_type)==max(engine_type),max(engine_type),NA),
engine_number=ifelse(max(engine_number)==max(engine_number),max(engine_number),NA),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes$engine_type <- as.character(engine_specs_no_dupes$engine_type)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(max(engine_type)==max(engine_type),max(engine_type),NA),
engine_number=ifelse(max(engine_number)==max(engine_number),max(engine_number),NA),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes$engine_type <- factor(engine_specs_no_dupes$engine_type)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, engine_type,  engine_number, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes<-engine_specs_no_dupes[order(engine_specs_no_dupes$aircraft),]
if(any(duplicated(engine_specs$aircraft)))
stop (paste("Duplicate aircraft in engine_spaces:",
unique(engine_specs$aircraft[duplicated(engine_specs$aircraft)])))
duplicate_aircraft<-unique(engine_specs_no_dupes$aircraft[duplicated(engine_specs_no_dupes$aircraft)])
write.csv(engine_specs_no_dupes[engine_specs_no_dupes$aircraft %in% duplicate_aircraft,],
"inventory/data/duplicate_engines.csv")
#Second version, to use
engine_specs_no_dupes$engine_type <- as.character(engine_specs_no_dupes$engine_type)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(max(engine_type)==max(engine_type),max(engine_type),NA),
engine_number=ifelse(max(engine_number)==max(engine_number),max(engine_number),NA),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes$engine_type <- factor(engine_specs_no_dupes$engine_type)
engine_specs$engine_type <- as.character(engine_specs$engine_type)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(max(engine_type)==max(engine_type),max(engine_type),NA),
engine_number=ifelse(max(engine_number)==max(engine_number),max(engine_number),NA),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes$engine_type <- factor(engine_specs_no_dupes$engine_type)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
# engine_type=ifelse(max(engine_type)==min(engine_type),max(engine_type),NA),
engine_number=ifelse(max(engine_number)==min(engine_number),max(engine_number),NA),
type_count=length(unique(type)),
record_count=length(aircraft))
View(engine_specs_no_dupes)
max(engine_specs$engine_type)
max(engine_specs$engine_type,na.rm=TRUE)
View(engine_specs)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(max(engine_type,na.rm = TRUE)==min(engine_type,na.rm=TRUE),max(engine_type,na.rm = TRUE),NA),
engine_number=ifelse(max(engine_number,na.rm=TRUE)==min(engine_number),max(engine_number,na.rm=TRUE),NA),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(max(engine_type)==min(engine_type),max(engine_type),NA_character_ ),
engine_number=ifelse(max(engine_number)==min(engine_number),max(engine_number),NA_integer_),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes$engine_type <- factor(engine_specs_no_dupes$engine_type)
engine_specs$engine_type <- as.character(engine_specs$engine_type)
View(engine_specs)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(!any(is.na(engine_type)) & max(engine_type)==min(engine_type),max(engine_type),NA_character_ ),
engine_number=ifelse(!any(is.na(engine_number)) & max(engine_number)==min(engine_number),max(engine_number),NA_n),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(!any(is.na(engine_type)) & max(engine_type)==min(engine_type),max(engine_type),NA_character_ ),
engine_number=ifelse(!any(is.na(engine_number)) & max(engine_number)==min(engine_number),max(engine_number),NA_integer_),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes<-engine_specs_no_dupes[,c(1,13:16,2:12)]
View(engine_specs_stripped)
View(engine_specs_no_dupes)
engine_specs_no_dupes <- engine_specs %>% group_by(aircraft, takeoff_weight, speed,
range, ceiling, climb_rate,  thrust_weight_aircraft, engine,  engine_company,
thrust,  pressure_ratio, engine_weight, thrust_weight_engine ) %>%
summarise(
engine_type=ifelse(!any(is.na(engine_type)) & max(engine_type)==min(engine_type),max(engine_type),NA_character_ ),
engine_number=ifelse(!any(is.na(engine_number)) & max(engine_number)==min(engine_number),max(engine_number),NA_integer_),
type_count=length(unique(type)),
record_count=length(aircraft))
engine_specs_no_dupes$engine_type <- factor(engine_specs_no_dupes$engine_type)
View(engine_specs_no_dupes)
engine_specs_no_dupes<-engine_specs_no_dupes[,c(1,14:17,2:13)]
View(engine_specs_no_dupes)
write.csv(engine_specs_no_dupes,
"inventory/data/engine_specs_no_dupes.csv")
aircraft_type_m2m<-unique(engine_specs[,c("aircraft","type")])
View(aircraft_type_m2m)
write.csv(engine_specs_no_dupes,
"inventory/data/aircraft_type_m2m.csv")
